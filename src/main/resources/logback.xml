<configuration>
  <!-- 에러 로깅 -->
  <appender name="errorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <file>./log/error.log</file>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} -%kvp -%msg%n</pattern>
    </encoder>
    <!-- 하루에 한번 압축 후 보관, 최대 30일, 1GB까지 보관 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>./log/errorLogFile.%d{yyyy-MM-dd}.gz</fileNamePattern>
      <maxHistory>30</maxHistory>
      <totalSizeCap>1GB</totalSizeCap>
    </rollingPolicy>
  </appender>

  <!-- API 로깅 -->
  <property name="apiLogFileName" value="api"/>
  <appender name="apiLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <file>./log/${apiLogFileName}.log</file>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}- %msg%n</pattern>
    </encoder>
    <!-- 하루에 한번 압축 후 보관, 최대 30일, 1GB까지 보관 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>./log/${apiLogFileName}.%d{yyyy-MM-dd}.gz</fileNamePattern>
      <maxHistory>30</maxHistory>
      <totalSizeCap>1GB</totalSizeCap>
    </rollingPolicy>
  </appender>

  <!-- EXTERNAL API 로깅 -->
  <property name="externalApiLogFileName" value="external-api"/>
  <appender name="externalApiLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <file>./log/${externalApiLogFileName}.log</file>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}- %msg%n</pattern>
    </encoder>
    <!-- 하루에 한번 압축 후 보관, 최대 30일, 1GB까지 보관 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>./log/${externalApiLogFileName}.%d{yyyy-MM-dd}.gz</fileNamePattern>
      <maxHistory>30</maxHistory>
      <totalSizeCap>1GB</totalSizeCap>
    </rollingPolicy>
  </appender>

  <!-- 콘솔출력 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <springProfile name="local">
    <root level="DEBUG">
      <appender-ref ref="STDOUT" />
    </root>
  </springProfile>
  <springProfile name="production">
    <root level="ERROR">
      <appender-ref ref="errorFile" />
    </root>
    <logger name="com.fooddiary.api.common.filter.LoggingFilter" level="INFO">
      <appender-ref ref="apiLogFile" />
    </logger>
    <logger name="com.fooddiary.api.common.interceptor.ExternalApiClientInterceptor" level="INFO">
      <appender-ref ref="externalApiLogFile" />
    </logger>
  </springProfile>

</configuration>