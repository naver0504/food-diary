/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq;


import com.fooddiary.api.jooq.tables.Diarybook;
import com.fooddiary.api.jooq.tables.Memo;
import com.fooddiary.api.jooq.tables.Photo;
import com.fooddiary.api.jooq.tables.Policy;
import com.fooddiary.api.jooq.tables.Session;
import com.fooddiary.api.jooq.tables.Tag;
import com.fooddiary.api.jooq.tables.User;
import com.fooddiary.api.jooq.tables.records.DiarybookRecord;
import com.fooddiary.api.jooq.tables.records.MemoRecord;
import com.fooddiary.api.jooq.tables.records.PhotoRecord;
import com.fooddiary.api.jooq.tables.records.PolicyRecord;
import com.fooddiary.api.jooq.tables.records.SessionRecord;
import com.fooddiary.api.jooq.tables.records.TagRecord;
import com.fooddiary.api.jooq.tables.records.UserRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * my_food_diarybook.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DiarybookRecord> KEY_DIARYBOOK_PRIMARY = Internal.createUniqueKey(Diarybook.DIARYBOOK, DSL.name("KEY_diarybook_PRIMARY"), new TableField[] { Diarybook.DIARYBOOK.ID }, true);
    public static final UniqueKey<MemoRecord> KEY_MEMO_PRIMARY = Internal.createUniqueKey(Memo.MEMO, DSL.name("KEY_memo_PRIMARY"), new TableField[] { Memo.MEMO.ID }, true);
    public static final UniqueKey<PhotoRecord> KEY_PHOTO_PRIMARY = Internal.createUniqueKey(Photo.PHOTO, DSL.name("KEY_photo_PRIMARY"), new TableField[] { Photo.PHOTO.ID }, true);
    public static final UniqueKey<PolicyRecord> KEY_POLICY_PRIMARY = Internal.createUniqueKey(Policy.POLICY, DSL.name("KEY_policy_PRIMARY"), new TableField[] { Policy.POLICY.ID }, true);
    public static final UniqueKey<SessionRecord> KEY_SESSION_PRIMARY = Internal.createUniqueKey(Session.SESSION, DSL.name("KEY_session_PRIMARY"), new TableField[] { Session.SESSION.TOKEN }, true);
    public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = Internal.createUniqueKey(Tag.TAG, DSL.name("KEY_tag_PRIMARY"), new TableField[] { Tag.TAG.DIARYBOOK_ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);
}
