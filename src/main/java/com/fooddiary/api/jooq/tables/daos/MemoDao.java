/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.daos;


import com.fooddiary.api.jooq.tables.Memo;
import com.fooddiary.api.jooq.tables.records.MemoRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemoDao extends DAOImpl<MemoRecord, com.fooddiary.api.jooq.tables.pojos.Memo, Long> {

    /**
     * Create a new MemoDao without any configuration
     */
    public MemoDao() {
        super(Memo.MEMO, com.fooddiary.api.jooq.tables.pojos.Memo.class);
    }

    /**
     * Create a new MemoDao with an attached configuration
     */
    public MemoDao(Configuration configuration) {
        super(Memo.MEMO, com.fooddiary.api.jooq.tables.pojos.Memo.class, configuration);
    }

    @Override
    public Long getId(com.fooddiary.api.jooq.tables.pojos.Memo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Memo.MEMO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchById(Long... values) {
        return fetch(Memo.MEMO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.fooddiary.api.jooq.tables.pojos.Memo fetchOneById(Long value) {
        return fetchOne(Memo.MEMO.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.fooddiary.api.jooq.tables.pojos.Memo> fetchOptionalById(Long value) {
        return fetchOptional(Memo.MEMO.ID, value);
    }

    /**
     * Fetch records that have <code>memo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchRangeOfMemo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Memo.MEMO.MEMO_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>memo IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchByMemo(String... values) {
        return fetch(Memo.MEMO.MEMO_, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Memo.MEMO.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(Memo.MEMO.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>diarybook_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchRangeOfDiarybookId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Memo.MEMO.DIARYBOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diarybook_id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Memo> fetchByDiarybookId(Long... values) {
        return fetch(Memo.MEMO.DIARYBOOK_ID, values);
    }
}
