/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.daos;


import com.fooddiary.api.jooq.tables.Photo;
import com.fooddiary.api.jooq.tables.records.PhotoRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhotoDao extends DAOImpl<PhotoRecord, com.fooddiary.api.jooq.tables.pojos.Photo, Long> {

    /**
     * Create a new PhotoDao without any configuration
     */
    public PhotoDao() {
        super(Photo.PHOTO, com.fooddiary.api.jooq.tables.pojos.Photo.class);
    }

    /**
     * Create a new PhotoDao with an attached configuration
     */
    public PhotoDao(Configuration configuration) {
        super(Photo.PHOTO, com.fooddiary.api.jooq.tables.pojos.Photo.class, configuration);
    }

    @Override
    public Long getId(com.fooddiary.api.jooq.tables.pojos.Photo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Photo.PHOTO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchById(Long... values) {
        return fetch(Photo.PHOTO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.fooddiary.api.jooq.tables.pojos.Photo fetchOneById(Long value) {
        return fetchOne(Photo.PHOTO.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.fooddiary.api.jooq.tables.pojos.Photo> fetchOptionalById(Long value) {
        return fetchOptional(Photo.PHOTO.ID, value);
    }

    /**
     * Fetch records that have <code>real_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchRangeOfRealName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Photo.PHOTO.REAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>real_name IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchByRealName(String... values) {
        return fetch(Photo.PHOTO.REAL_NAME, values);
    }

    /**
     * Fetch records that have <code>s3_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchRangeOfS3Key(String lowerInclusive, String upperInclusive) {
        return fetchRange(Photo.PHOTO.S3_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>s3_key IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchByS3Key(String... values) {
        return fetch(Photo.PHOTO.S3_KEY, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Photo.PHOTO.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(Photo.PHOTO.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>diarybook_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchRangeOfDiarybookId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Photo.PHOTO.DIARYBOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diarybook_id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Photo> fetchByDiarybookId(Long... values) {
        return fetch(Photo.PHOTO.DIARYBOOK_ID, values);
    }
}
