/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.daos;


import com.fooddiary.api.jooq.enums.DiarybookMealType;
import com.fooddiary.api.jooq.tables.Diarybook;
import com.fooddiary.api.jooq.tables.records.DiarybookRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiarybookDao extends DAOImpl<DiarybookRecord, com.fooddiary.api.jooq.tables.pojos.Diarybook, Long> {

    /**
     * Create a new DiarybookDao without any configuration
     */
    public DiarybookDao() {
        super(Diarybook.DIARYBOOK, com.fooddiary.api.jooq.tables.pojos.Diarybook.class);
    }

    /**
     * Create a new DiarybookDao with an attached configuration
     */
    public DiarybookDao(Configuration configuration) {
        super(Diarybook.DIARYBOOK, com.fooddiary.api.jooq.tables.pojos.Diarybook.class, configuration);
    }

    @Override
    public Long getId(com.fooddiary.api.jooq.tables.pojos.Diarybook object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Diarybook.DIARYBOOK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchById(Long... values) {
        return fetch(Diarybook.DIARYBOOK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.fooddiary.api.jooq.tables.pojos.Diarybook fetchOneById(Long value) {
        return fetchOne(Diarybook.DIARYBOOK.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchOptionalById(Long value) {
        return fetchOptional(Diarybook.DIARYBOOK.ID, value);
    }

    /**
     * Fetch records that have <code>date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchRangeOfDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Diarybook.DIARYBOOK.DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchByDate(LocalDate... values) {
        return fetch(Diarybook.DIARYBOOK.DATE, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Diarybook.DIARYBOOK.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchByCreateAt(LocalDateTime... values) {
        return fetch(Diarybook.DIARYBOOK.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>create_user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchRangeOfCreateUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Diarybook.DIARYBOOK.CREATE_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_user_id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchByCreateUserId(Integer... values) {
        return fetch(Diarybook.DIARYBOOK.CREATE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>meal_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchRangeOfMealType(DiarybookMealType lowerInclusive, DiarybookMealType upperInclusive) {
        return fetchRange(Diarybook.DIARYBOOK.MEAL_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meal_type IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Diarybook> fetchByMealType(DiarybookMealType... values) {
        return fetch(Diarybook.DIARYBOOK.MEAL_TYPE, values);
    }
}
