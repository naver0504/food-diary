/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.daos;


import com.fooddiary.api.jooq.tables.Policy;
import com.fooddiary.api.jooq.tables.records.PolicyRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 정책테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyDao extends DAOImpl<PolicyRecord, com.fooddiary.api.jooq.tables.pojos.Policy, Integer> {

    /**
     * Create a new PolicyDao without any configuration
     */
    public PolicyDao() {
        super(Policy.POLICY, com.fooddiary.api.jooq.tables.pojos.Policy.class);
    }

    /**
     * Create a new PolicyDao with an attached configuration
     */
    public PolicyDao(Configuration configuration) {
        super(Policy.POLICY, com.fooddiary.api.jooq.tables.pojos.Policy.class, configuration);
    }

    @Override
    public Integer getId(com.fooddiary.api.jooq.tables.pojos.Policy object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Policy.POLICY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchById(Integer... values) {
        return fetch(Policy.POLICY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.fooddiary.api.jooq.tables.pojos.Policy fetchOneById(Integer value) {
        return fetchOne(Policy.POLICY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.fooddiary.api.jooq.tables.pojos.Policy> fetchOptionalById(Integer value) {
        return fetchOptional(Policy.POLICY.ID, value);
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchRangeOfKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(Policy.POLICY.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchByKey(String... values) {
        return fetch(Policy.POLICY.KEY, values);
    }

    /**
     * Fetch records that have <code>value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchRangeOfValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(Policy.POLICY.VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchByValue(String... values) {
        return fetch(Policy.POLICY.VALUE, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Policy.POLICY.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchByCreateAt(LocalDateTime... values) {
        return fetch(Policy.POLICY.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>update_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchRangeOfUpdateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Policy.POLICY.UPDATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_at IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Policy> fetchByUpdateAt(LocalDateTime... values) {
        return fetch(Policy.POLICY.UPDATE_AT, values);
    }
}
