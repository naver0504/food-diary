/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.records;


import com.fooddiary.api.jooq.enums.UserCreatePath;
import com.fooddiary.api.jooq.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<Integer, String, String, String, UserCreatePath, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>my_food_diarybook.user.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>my_food_diarybook.user.pw</code>.
     */
    public void setPw(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.pw</code>.
     */
    public String getPw() {
        return (String) get(1);
    }

    /**
     * Setter for <code>my_food_diarybook.user.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>my_food_diarybook.user.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>my_food_diarybook.user.create_path</code>.
     */
    public void setCreatePath(UserCreatePath value) {
        set(4, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.create_path</code>.
     */
    public UserCreatePath getCreatePath() {
        return (UserCreatePath) get(4);
    }

    /**
     * Setter for <code>my_food_diarybook.user.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>my_food_diarybook.user.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>my_food_diarybook.user.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, UserCreatePath, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, UserCreatePath, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.PW;
    }

    @Override
    public Field<String> field3() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<UserCreatePath> field5() {
        return User.USER.CREATE_PATH;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return User.USER.CREATE_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return User.USER.UPDATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPw();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public UserCreatePath component5() {
        return getCreatePath();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPw();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public UserCreatePath value5() {
        return getCreatePath();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateAt();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setPw(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value5(UserCreatePath value) {
        setCreatePath(value);
        return this;
    }

    @Override
    public UserRecord value6(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public UserRecord value7(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, String value4, UserCreatePath value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String pw, String name, String email, UserCreatePath createPath, LocalDateTime createAt, LocalDateTime updateAt) {
        super(User.USER);

        setId(id);
        setPw(pw);
        setName(name);
        setEmail(email);
        setCreatePath(createPath);
        setCreateAt(createAt);
        setUpdateAt(updateAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(com.fooddiary.api.jooq.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setId(value.getId());
            setPw(value.getPw());
            setName(value.getName());
            setEmail(value.getEmail());
            setCreatePath(value.getCreatePath());
            setCreateAt(value.getCreateAt());
            setUpdateAt(value.getUpdateAt());
            resetChangedOnNotNull();
        }
    }
}
