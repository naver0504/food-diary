/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.records;


import com.fooddiary.api.jooq.tables.Memo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemoRecord extends UpdatableRecordImpl<MemoRecord> implements Record4<Long, String, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>my_food_diarybook.memo.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>my_food_diarybook.memo.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>my_food_diarybook.memo.memo</code>.
     */
    public void setMemo(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>my_food_diarybook.memo.memo</code>.
     */
    public String getMemo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>my_food_diarybook.memo.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>my_food_diarybook.memo.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>my_food_diarybook.memo.diarybook_id</code>.
     */
    public void setDiarybookId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>my_food_diarybook.memo.diarybook_id</code>.
     */
    public Long getDiarybookId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDateTime, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, LocalDateTime, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Memo.MEMO.ID;
    }

    @Override
    public Field<String> field2() {
        return Memo.MEMO.MEMO_;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Memo.MEMO.CREATE_AT;
    }

    @Override
    public Field<Long> field4() {
        return Memo.MEMO.DIARYBOOK_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMemo();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateAt();
    }

    @Override
    public Long component4() {
        return getDiarybookId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMemo();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateAt();
    }

    @Override
    public Long value4() {
        return getDiarybookId();
    }

    @Override
    public MemoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MemoRecord value2(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public MemoRecord value3(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public MemoRecord value4(Long value) {
        setDiarybookId(value);
        return this;
    }

    @Override
    public MemoRecord values(Long value1, String value2, LocalDateTime value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemoRecord
     */
    public MemoRecord() {
        super(Memo.MEMO);
    }

    /**
     * Create a detached, initialised MemoRecord
     */
    public MemoRecord(Long id, String memo, LocalDateTime createAt, Long diarybookId) {
        super(Memo.MEMO);

        setId(id);
        setMemo(memo);
        setCreateAt(createAt);
        setDiarybookId(diarybookId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MemoRecord
     */
    public MemoRecord(com.fooddiary.api.jooq.tables.pojos.Memo value) {
        super(Memo.MEMO);

        if (value != null) {
            setId(value.getId());
            setMemo(value.getMemo());
            setCreateAt(value.getCreateAt());
            setDiarybookId(value.getDiarybookId());
            resetChangedOnNotNull();
        }
    }
}
