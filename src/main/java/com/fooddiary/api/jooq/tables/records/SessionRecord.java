/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.records;


import com.fooddiary.api.jooq.tables.Session;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionRecord extends UpdatableRecordImpl<SessionRecord> implements Record5<String, LocalDateTime, LocalDateTime, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>my_food_diarybook.session.token</code>.
     */
    public void setToken(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>my_food_diarybook.session.token</code>.
     */
    public String getToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>my_food_diarybook.session.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>my_food_diarybook.session.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>my_food_diarybook.session.terminate_at</code>.
     */
    public void setTerminateAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>my_food_diarybook.session.terminate_at</code>.
     */
    public LocalDateTime getTerminateAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>my_food_diarybook.session.user_email</code>.
     */
    public void setUserEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>my_food_diarybook.session.user_email</code>.
     */
    public String getUserEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>my_food_diarybook.session.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>my_food_diarybook.session.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, LocalDateTime, LocalDateTime, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, LocalDateTime, LocalDateTime, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Session.SESSION.TOKEN;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Session.SESSION.CREATE_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Session.SESSION.TERMINATE_AT;
    }

    @Override
    public Field<String> field4() {
        return Session.SESSION.USER_EMAIL;
    }

    @Override
    public Field<Integer> field5() {
        return Session.SESSION.USER_ID;
    }

    @Override
    public String component1() {
        return getToken();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateAt();
    }

    @Override
    public LocalDateTime component3() {
        return getTerminateAt();
    }

    @Override
    public String component4() {
        return getUserEmail();
    }

    @Override
    public Integer component5() {
        return getUserId();
    }

    @Override
    public String value1() {
        return getToken();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateAt();
    }

    @Override
    public LocalDateTime value3() {
        return getTerminateAt();
    }

    @Override
    public String value4() {
        return getUserEmail();
    }

    @Override
    public Integer value5() {
        return getUserId();
    }

    @Override
    public SessionRecord value1(String value) {
        setToken(value);
        return this;
    }

    @Override
    public SessionRecord value2(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public SessionRecord value3(LocalDateTime value) {
        setTerminateAt(value);
        return this;
    }

    @Override
    public SessionRecord value4(String value) {
        setUserEmail(value);
        return this;
    }

    @Override
    public SessionRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public SessionRecord values(String value1, LocalDateTime value2, LocalDateTime value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionRecord
     */
    public SessionRecord() {
        super(Session.SESSION);
    }

    /**
     * Create a detached, initialised SessionRecord
     */
    public SessionRecord(String token, LocalDateTime createAt, LocalDateTime terminateAt, String userEmail, Integer userId) {
        super(Session.SESSION);

        setToken(token);
        setCreateAt(createAt);
        setTerminateAt(terminateAt);
        setUserEmail(userEmail);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SessionRecord
     */
    public SessionRecord(com.fooddiary.api.jooq.tables.pojos.Session value) {
        super(Session.SESSION);

        if (value != null) {
            setToken(value.getToken());
            setCreateAt(value.getCreateAt());
            setTerminateAt(value.getTerminateAt());
            setUserEmail(value.getUserEmail());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
