/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.records;


import com.fooddiary.api.jooq.enums.DiarybookMealType;
import com.fooddiary.api.jooq.tables.Diarybook;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiarybookRecord extends UpdatableRecordImpl<DiarybookRecord> implements Record5<Long, LocalDate, LocalDateTime, Integer, DiarybookMealType> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>my_food_diarybook.diarybook.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>my_food_diarybook.diarybook.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>my_food_diarybook.diarybook.date</code>.
     */
    public void setDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>my_food_diarybook.diarybook.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>my_food_diarybook.diarybook.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>my_food_diarybook.diarybook.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>my_food_diarybook.diarybook.create_user_id</code>.
     */
    public void setCreateUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>my_food_diarybook.diarybook.create_user_id</code>.
     */
    public Integer getCreateUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>my_food_diarybook.diarybook.meal_type</code>.
     */
    public void setMealType(DiarybookMealType value) {
        set(4, value);
    }

    /**
     * Getter for <code>my_food_diarybook.diarybook.meal_type</code>.
     */
    public DiarybookMealType getMealType() {
        return (DiarybookMealType) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDate, LocalDateTime, Integer, DiarybookMealType> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalDate, LocalDateTime, Integer, DiarybookMealType> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Diarybook.DIARYBOOK.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Diarybook.DIARYBOOK.DATE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Diarybook.DIARYBOOK.CREATE_AT;
    }

    @Override
    public Field<Integer> field4() {
        return Diarybook.DIARYBOOK.CREATE_USER_ID;
    }

    @Override
    public Field<DiarybookMealType> field5() {
        return Diarybook.DIARYBOOK.MEAL_TYPE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getDate();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateAt();
    }

    @Override
    public Integer component4() {
        return getCreateUserId();
    }

    @Override
    public DiarybookMealType component5() {
        return getMealType();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getDate();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateAt();
    }

    @Override
    public Integer value4() {
        return getCreateUserId();
    }

    @Override
    public DiarybookMealType value5() {
        return getMealType();
    }

    @Override
    public DiarybookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DiarybookRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public DiarybookRecord value3(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public DiarybookRecord value4(Integer value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public DiarybookRecord value5(DiarybookMealType value) {
        setMealType(value);
        return this;
    }

    @Override
    public DiarybookRecord values(Long value1, LocalDate value2, LocalDateTime value3, Integer value4, DiarybookMealType value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DiarybookRecord
     */
    public DiarybookRecord() {
        super(Diarybook.DIARYBOOK);
    }

    /**
     * Create a detached, initialised DiarybookRecord
     */
    public DiarybookRecord(Long id, LocalDate date, LocalDateTime createAt, Integer createUserId, DiarybookMealType mealType) {
        super(Diarybook.DIARYBOOK);

        setId(id);
        setDate(date);
        setCreateAt(createAt);
        setCreateUserId(createUserId);
        setMealType(mealType);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DiarybookRecord
     */
    public DiarybookRecord(com.fooddiary.api.jooq.tables.pojos.Diarybook value) {
        super(Diarybook.DIARYBOOK);

        if (value != null) {
            setId(value.getId());
            setDate(value.getDate());
            setCreateAt(value.getCreateAt());
            setCreateUserId(value.getCreateUserId());
            setMealType(value.getMealType());
            resetChangedOnNotNull();
        }
    }
}
