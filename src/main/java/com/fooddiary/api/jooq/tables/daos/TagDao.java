/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.daos;


import com.fooddiary.api.jooq.tables.Tag;
import com.fooddiary.api.jooq.tables.records.TagRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagDao extends DAOImpl<TagRecord, com.fooddiary.api.jooq.tables.pojos.Tag, Long> {

    /**
     * Create a new TagDao without any configuration
     */
    public TagDao() {
        super(Tag.TAG, com.fooddiary.api.jooq.tables.pojos.Tag.class);
    }

    /**
     * Create a new TagDao with an attached configuration
     */
    public TagDao(Configuration configuration) {
        super(Tag.TAG, com.fooddiary.api.jooq.tables.pojos.Tag.class, configuration);
    }

    @Override
    public Long getId(com.fooddiary.api.jooq.tables.pojos.Tag object) {
        return object.getDiarybookId();
    }

    /**
     * Fetch records that have <code>diarybook_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Tag> fetchRangeOfDiarybookId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tag.TAG.DIARYBOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diarybook_id IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Tag> fetchByDiarybookId(Long... values) {
        return fetch(Tag.TAG.DIARYBOOK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>diarybook_id = value</code>
     */
    public com.fooddiary.api.jooq.tables.pojos.Tag fetchOneByDiarybookId(Long value) {
        return fetchOne(Tag.TAG.DIARYBOOK_ID, value);
    }

    /**
     * Fetch a unique record that has <code>diarybook_id = value</code>
     */
    public Optional<com.fooddiary.api.jooq.tables.pojos.Tag> fetchOptionalByDiarybookId(Long value) {
        return fetchOptional(Tag.TAG.DIARYBOOK_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Tag> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tag.TAG.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Tag> fetchByName(String... values) {
        return fetch(Tag.TAG.NAME, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Tag> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Tag.TAG.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<com.fooddiary.api.jooq.tables.pojos.Tag> fetchByCreateAt(LocalDateTime... values) {
        return fetch(Tag.TAG.CREATE_AT, values);
    }
}
