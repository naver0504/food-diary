/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.records;


import com.fooddiary.api.jooq.tables.Photo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhotoRecord extends UpdatableRecordImpl<PhotoRecord> implements Record5<Long, String, String, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>my_food_diarybook.photo.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>my_food_diarybook.photo.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>my_food_diarybook.photo.real_name</code>.
     */
    public void setRealName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>my_food_diarybook.photo.real_name</code>.
     */
    public String getRealName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>my_food_diarybook.photo.s3_key</code>.
     */
    public void setS3Key(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>my_food_diarybook.photo.s3_key</code>.
     */
    public String getS3Key() {
        return (String) get(2);
    }

    /**
     * Setter for <code>my_food_diarybook.photo.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>my_food_diarybook.photo.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>my_food_diarybook.photo.diarybook_id</code>.
     */
    public void setDiarybookId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>my_food_diarybook.photo.diarybook_id</code>.
     */
    public Long getDiarybookId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, LocalDateTime, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, LocalDateTime, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Photo.PHOTO.ID;
    }

    @Override
    public Field<String> field2() {
        return Photo.PHOTO.REAL_NAME;
    }

    @Override
    public Field<String> field3() {
        return Photo.PHOTO.S3_KEY;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Photo.PHOTO.CREATE_AT;
    }

    @Override
    public Field<Long> field5() {
        return Photo.PHOTO.DIARYBOOK_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRealName();
    }

    @Override
    public String component3() {
        return getS3Key();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateAt();
    }

    @Override
    public Long component5() {
        return getDiarybookId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRealName();
    }

    @Override
    public String value3() {
        return getS3Key();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateAt();
    }

    @Override
    public Long value5() {
        return getDiarybookId();
    }

    @Override
    public PhotoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PhotoRecord value2(String value) {
        setRealName(value);
        return this;
    }

    @Override
    public PhotoRecord value3(String value) {
        setS3Key(value);
        return this;
    }

    @Override
    public PhotoRecord value4(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public PhotoRecord value5(Long value) {
        setDiarybookId(value);
        return this;
    }

    @Override
    public PhotoRecord values(Long value1, String value2, String value3, LocalDateTime value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PhotoRecord
     */
    public PhotoRecord() {
        super(Photo.PHOTO);
    }

    /**
     * Create a detached, initialised PhotoRecord
     */
    public PhotoRecord(Long id, String realName, String s3Key, LocalDateTime createAt, Long diarybookId) {
        super(Photo.PHOTO);

        setId(id);
        setRealName(realName);
        setS3Key(s3Key);
        setCreateAt(createAt);
        setDiarybookId(diarybookId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PhotoRecord
     */
    public PhotoRecord(com.fooddiary.api.jooq.tables.pojos.Photo value) {
        super(Photo.PHOTO);

        if (value != null) {
            setId(value.getId());
            setRealName(value.getRealName());
            setS3Key(value.getS3Key());
            setCreateAt(value.getCreateAt());
            setDiarybookId(value.getDiarybookId());
            resetChangedOnNotNull();
        }
    }
}
