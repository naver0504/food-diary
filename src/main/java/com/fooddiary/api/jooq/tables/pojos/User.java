/*
 * This file is generated by jOOQ.
 */
package com.fooddiary.api.jooq.tables.pojos;


import com.fooddiary.api.jooq.enums.UserCreatePath;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String pw;
    private String name;
    private String email;
    private UserCreatePath createPath;
    private LocalDateTime createAt;
    private LocalDateTime updateAt;

    public User() {}

    public User(User value) {
        this.id = value.id;
        this.pw = value.pw;
        this.name = value.name;
        this.email = value.email;
        this.createPath = value.createPath;
        this.createAt = value.createAt;
        this.updateAt = value.updateAt;
    }

    public User(
        Integer id,
        String pw,
        String name,
        String email,
        UserCreatePath createPath,
        LocalDateTime createAt,
        LocalDateTime updateAt
    ) {
        this.id = id;
        this.pw = pw;
        this.name = name;
        this.email = email;
        this.createPath = createPath;
        this.createAt = createAt;
        this.updateAt = updateAt;
    }

    /**
     * Getter for <code>my_food_diarybook.user.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>my_food_diarybook.user.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>my_food_diarybook.user.pw</code>.
     */
    public String getPw() {
        return this.pw;
    }

    /**
     * Setter for <code>my_food_diarybook.user.pw</code>.
     */
    public void setPw(String pw) {
        this.pw = pw;
    }

    /**
     * Getter for <code>my_food_diarybook.user.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>my_food_diarybook.user.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>my_food_diarybook.user.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>my_food_diarybook.user.email</code>.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>my_food_diarybook.user.create_path</code>.
     */
    public UserCreatePath getCreatePath() {
        return this.createPath;
    }

    /**
     * Setter for <code>my_food_diarybook.user.create_path</code>.
     */
    public void setCreatePath(UserCreatePath createPath) {
        this.createPath = createPath;
    }

    /**
     * Getter for <code>my_food_diarybook.user.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return this.createAt;
    }

    /**
     * Setter for <code>my_food_diarybook.user.create_at</code>.
     */
    public void setCreateAt(LocalDateTime createAt) {
        this.createAt = createAt;
    }

    /**
     * Getter for <code>my_food_diarybook.user.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return this.updateAt;
    }

    /**
     * Setter for <code>my_food_diarybook.user.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime updateAt) {
        this.updateAt = updateAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final User other = (User) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.pw == null) {
            if (other.pw != null)
                return false;
        }
        else if (!this.pw.equals(other.pw))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.createPath == null) {
            if (other.createPath != null)
                return false;
        }
        else if (!this.createPath.equals(other.createPath))
            return false;
        if (this.createAt == null) {
            if (other.createAt != null)
                return false;
        }
        else if (!this.createAt.equals(other.createAt))
            return false;
        if (this.updateAt == null) {
            if (other.updateAt != null)
                return false;
        }
        else if (!this.updateAt.equals(other.updateAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.pw == null) ? 0 : this.pw.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.createPath == null) ? 0 : this.createPath.hashCode());
        result = prime * result + ((this.createAt == null) ? 0 : this.createAt.hashCode());
        result = prime * result + ((this.updateAt == null) ? 0 : this.updateAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(id);
        sb.append(", ").append(pw);
        sb.append(", ").append(name);
        sb.append(", ").append(email);
        sb.append(", ").append(createPath);
        sb.append(", ").append(createAt);
        sb.append(", ").append(updateAt);

        sb.append(")");
        return sb.toString();
    }
}
